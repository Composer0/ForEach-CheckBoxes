@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');
* {
    box-sizing: border-box;
}

body {
    background-color: #ff5e8e50;
    font-family: 'Roboto', sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    overflow: hidden;
    margin: 0;
}

.toggle-container {
    display: flex;
    align-items: center;
    margin: 10px 0;
    width: 200px;
    /* width has the items line up to the left. */
}

.toggle {
    visibility: hidden;
    /* removes toggles */
}

.label {
    position: relative;
    /* position: relative has to be included because the ball is being set to position: absolute. This is important because the ball rests inside of the label div. */
    background-color: #d0d0d0;
    border-radius: 50px;
    cursor: pointer;
    display: inline-block;
    margin: 0 15px 0;
    width: 80px;
    height: 40px;
    /* brings back to the center and further vertically separates. */
}

.toggle:checked + .label {
    background-color: #8e44ad;
}

.ball {
    background: #fff;
    height: 34px;
    width: 34px;
    border-radius: 50%;
    /* 50% equals perfect circle */
    position: absolute;
    /* without the absolute and previuos relative, the ball will not move no matter what inputs are made to its location.*/
    top: 3px;
    left: 3px;
    align-items: center;
    justify-content: center;
    animation: slideOff 0.3s linear forwards;
}

.toggle:checked + .label .ball {
    animation: slideOn 0.3s linear forwards;
    /* on its own it will slide foward on click but not backwards. */
}

/* slideOff animation is stored on .ball while slideOn is initiabed by .toggle:checked. */


@keyframes slideOn {
    0% {
        transform: translateX(0) scale(1);
    }
    50% {
        transform: translateX(20px) scale(1.2);
    }
    100% {
        transform: translateX(40px) scale(1)
    }
    /* 0, 50, 100 are used to illustrate what the ball should be doing at specific points. Scale will grow larger in the middle before settling. */
}

@keyframes slideOff {
    0% {
        transform: translateX(40px) scale(1);
    }
    50% {
        transform: translateX(20px) scale(1.2);
    }
    100% {
        transform: translateX(0px) scale(1)
    }
}
    /* has to be this way because the 40 is where we ended previously and the 0 is where we started.*/

footer {
    color: slategray;
    width: 100%;
    position: absolute;
    text-align: center;
    bottom: 30px;
    z-index: -1;
}